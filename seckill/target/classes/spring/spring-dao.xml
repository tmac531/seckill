<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>
<!-- 数据库连接池 -->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--连接池中保留的最大连接数。默认值: 15 -->
		<property name="maxPoolSize" value="20"></property>
		<!-- 连接池中保留的最小连接数，默认为：3-->
		<property name="minPoolSize" value="2"></property>
		<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->  
        <property name="initialPoolSize" value="2"/>
		<!-- 当连接池连接耗尽时，客户端调用getConnection()后等待获取新连接的时间，
		超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。默认: 0 --> 
		<property name="checkoutTimeout" value="0"/> 
		<!--关闭连接时，是否提交未提交的事务，默认为false，即关闭连接，回滚未提交的事务 -->   
        <property name="autoCommitOnClose" value="false"/>
        <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->   
        <property name="acquireRetryAttempts" value="0"/>
	</bean>
	
  <!-- 配置sqlSessionFactory对象 -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
     <!-- 注入数据库连接池 -->
      <property name="dataSource" ref="dataSource"></property>
     <!-- 配置mybatis全局配置文件:mybatis-config.xml -->
      <property name="configLocation" value="classpath:mybatis-config.xml"></property>
     <!-- 扫描entity包，使用别名org.seckill.entity.Seckill->Seckill -->
     <property name="typeAliasesPackage" value="org.seckill.entity"></property>
     <!-- 扫描sql配置文件:mapper需要的xml文件 -->
     <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
  </bean>
  
  <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	    <!-- 给出要扫描的Dao接口的包 -->
	    <property name="basePackage" value="org.seckill.dao"/>
	</bean>
</beans>
	